<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>dbd-jdbc-perlmodule</artifactId>
	<name>DBD-JDBC Perl module</name>

	<parent>
		<groupId>com.vizdom</groupId>
		<artifactId>dbd-jdbc</artifactId>
		<version>0.71-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.vizdom</groupId>
			<artifactId>dbd-jdbc-server</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- clean additional to Makefile.PL -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>dist</directory>
							<directory>target</directory>
							<directory>blib</directory>
							<directory>test</directory>
						</fileset>
						<fileset>
							<directory>${basedir}</directory>
							<includes>
								<include>Makefile.old</include>
								<include>Makefile</include>
								<include>MYMETA.json</include>
								<include>MYMETA.yml</include>
								<include>pm_to_blib</include>
								<include>*.tar.gz</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- this disables installing by binding it to a non-existend phase. -->
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>never</phase>
					</execution>
				</executions>
			</plugin>
			<!-- this disables packaging by binding it to a non-existend phase. -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>never</phase>
						<configuration>
							<finalName>unwanted</finalName>
							<classifier>unwanted</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- keep ant buildfile for now. -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>ant-makefile</id>
						<phase>initialize</phase>
						<configuration>
							<target>
								<ant antfile="ant-makefile.xml" />
							</target>
							<failOnError>true</failOnError>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>ant-compile</id>
						<phase>package</phase>
						<configuration>
							<target>
								<ant antfile="build.xml" />
							</target>
							<failOnError>true</failOnError>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>ant-test</id>
						<phase>test</phase>
						<configuration>
							<target>
								<ant antfile="ant-test.xml" />
							</target>
							<failOnError>true</failOnError>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
